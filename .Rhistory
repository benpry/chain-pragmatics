mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
corpus_set = "test"
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
# constants
corpus = "katz"
corpus_set = "test"
gpt_version = "curie"
prompt_type = "QUD_v3"
K = 10
temp = 0.9
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_basic <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, "basic", K, temp)))
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.concatenated <- df.responses_rationale |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "rationßale") |>
rbind(df.responses_basic |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "basic")
)
model <- brm(appropriateness_diff ~ 1, data=df.differences)
summary(model)
model <- brm(appropriateness_score ~ 1 + prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
model <- brm(appropriateness_rationale ~ FAM, family=cumulative(), data=df.differences)
summary(model)
model <- brm(appropriateness_rationale ~ FAM, family=cumulative(), data=df.differences)
summary(model)
model <- brm(appropriateness_basic ~ FAM, family=cumulative(), data=df.differences)
summary(model)
model <- brm(appropriateness_score ~ 1 + prompt_type, data = df.concatenated)
summary(model)
View(df.differences)
model <- brm(appropriateness_diff ~ 1, data=df.differences)
summary(model)
model <- brm(appropriateness_diff ~ 1, data=df.differences)
summary(model)
model <- brm(appropriateness_diff ~ 1, family=cumulative(), data=df.differences)
model <- brm(appropriateness_diff ~ 1, family=cumulative(), data=df.differences)
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic + 3) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic + 4) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.concatenated <- df.responses_rationale |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "rationßale") |>
rbind(df.responses_basic |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "basic")
)
model <- brm(appropriateness_diff ~ 1, family=cumulative(), data=df.differences)
summary(model)
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.concatenated <- df.responses_rationale |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "rationßale") |>
rbind(df.responses_basic |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "basic")
)
model <- brm(appropriateness_diff ~ 1, family=cumulative(), data=df.differences)
summary(model)
model <- brm(appropriateness_diff ~ prompt_type, data = df.concatenated)
summary(model)
model <- brm(appropriateness_diff ~ prompt_type, data = df.concatenated)
summary(model)
View(df.concatenated)
model <- brm(appropriateness_score ~ prompt_type, data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_basic <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, "basic", K, temp)))
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.concatenated <- df.responses_rationale |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "rationßale") |>
rbind(df.responses_basic |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "basic")
)
model <- brm(appropriateness_diff ~ 1, family=cumulative(), data=df.differences)
summary(model)
psycholing_cols <- c("CMP","ESI","MET","MGD","IMG","IMS","IMP","FAM","SRL","ALT")
model <- brm(appropriateness_rationale ~ ALT, family=cumulative(), data=df.differences)
library(brms)
library(here)
library(broom)
library(tidyverse)
# constants
corpus = "katz"
corpus_set = "test"
gpt_version = "davinci"
prompt_type = "similarity"
K = 10
temp = 0.9
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_basic <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, "basic", K, temp)))
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.concatenated <- df.responses_rationale |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "rationßale") |>
rbind(df.responses_basic |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "basic")
)
model <- brm(appropriateness_diff ~ 1, family=cumulative(), data=df.differences)
summary(model)
model <- brm(appropriateness_diff ~ 1, data=df.differences)
summary(model)
psycholing_cols <- c("CMP","ESI","MET","MGD","IMG","IMS","IMP","FAM","SRL","ALT")
model <- brm(appropriateness_rationale ~ ALT, family=cumulative(), data=df.differences)
summary(model)
model <- brm(appropriateness_rationale ~ FAM, family=cumulative(), data=df.differences)
summary(model)
model <- brm(appropriateness_basc ~ FAM, family=cumulative(), data=df.differences)
model <- brm(appropriateness_basic ~ FAM, family=cumulative(), data=df.differences)
summary(model)
View(df.responses_basic)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
View(df.differences)
View(df.differences)
ggplot(
data = df.differences,
mapping = aes(x = appropriateness_basic)
) +
geom_histogram()
ggplot(
data = df.differences,
mapping = aes(x = appropriateness_basic)
) +
geom_histogram()
library(tidyverse)
library(brms)
library(here)
library(broom)
library(tidyverse)
# constants
corpus = "katz"
corpus_set = "test"
gpt_version = "davinci"
prompt_type = "similarity"
K = 10
temp = 0.9
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_basic <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, "basic", K, temp)))
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.concatenated <- df.responses_rationale |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "rationßale") |>
rbind(df.responses_basic |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "basic")
)
model <- brm(appropriateness_diff ~ 1, data=df.differences)
summary(model)
psycholing_cols <- c("CMP","ESI","MET","MGD","IMG","IMS","IMP","FAM","SRL","ALT")
model <- brm(appropriateness_rationale ~ ALT, family=cumulative(), data=df.differences)
summary(model)
interesting_looking_measures <- c("ESI", "IMG", "IMP", "FAM")
model <- brm(appropriateness_basic ~ FAM, family=cumulative(), data=df.differences)
summary(model)
plot(model)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
ggplot(
data = df.differences,
mapping = aes(x = appropriateness_basic)
) +
geom_histogram()
library(tidyverse)
install.packages("Matrix")
install.packages("Matrix")
library(tidyverse)
library(brms)
library(here)
library(broom)
library(tidyverse)
# constants
corpus = "katz"
corpus_set = "test"
gpt_version = "davinci"
prompt_type = "similarity"
K = 10
temp = 0.9
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_basic <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, "basic", K, temp)))
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.concatenated <- df.responses_rationale |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "rationßale") |>
rbind(df.responses_basic |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "basic")
)
model <- brm(appropriateness_diff ~ 1, data=df.differences)
summary(model)
psycholing_cols <- c("CMP","ESI","MET","MGD","IMG","IMS","IMP","FAM","SRL","ALT")
model <- brm(appropriateness_rationale ~ ALT, family=cumulative(), data=df.differences)
summary(model)
interesting_looking_measures <- c("ESI", "IMG", "IMP", "FAM")
model <- brm(appropriateness_basic ~ FAM, family=cumulative(), data=df.differences)
summary(model)
plot(model)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
ggplot(
data = df.differences,
mapping = aes(x = appropriateness_basic)
) +
geom_histogram()
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
library(tidyverse)
library(brms)
library(here)
library(broom)
library(tidyverse)
# constants
corpus = "katz"
corpus_set = "test"
gpt_version = "curie"
prompt_type = "QUD_v3"
K = 10
temp = 0.9
df.responses_rationale <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, prompt_type, K, temp)))
df.responses_basic <- read.csv(
here(sprintf("data/model-outputs/model_responses_corpus=%s-set=%s-gpt=%s-prompt=%s-k=%s-temp=%s-processed.csv",
corpus, corpus_set, gpt_version, "basic", K, temp)))
df.differences <- df.responses_rationale |>
select(ID, appropriateness_score) |>
rename(appropriateness_rationale = appropriateness_score) |>
left_join(df.responses_basic, on=ID) |>
rename(appropriateness_basic = appropriateness_score) |>
mutate(appropriateness_diff = appropriateness_rationale - appropriateness_basic) |>
mutate(appropriateness_rationale_norm = appropriateness_rationale - 2.5)
df.concatenated <- df.responses_rationale |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "rationßale") |>
rbind(df.responses_basic |>
select(ID, appropriateness_score) |>
mutate(prompt_type = "basic")
)
model <- brm(appropriateness_diff ~ 1, data=df.differences)
summary(model)
psycholing_cols <- c("CMP","ESI","MET","MGD","IMG","IMS","IMP","FAM","SRL","ALT")
model <- brm(appropriateness_rationale ~ ALT, family=cumulative(), data=df.differences)
summary(model)
interesting_looking_measures <- c("ESI", "IMG", "IMP", "FAM")
model <- brm(appropriateness_basic ~ FAM, family=cumulative(), data=df.differences)
summary(model)
plot(model)
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
ggplot(
data = df.differences,
mapping = aes(x = appropriateness_basic)
) +
geom_histogram()
model <- brm(appropriateness_score ~ prompt_type, family=cumulative(), data = df.concatenated)
summary(model)
library(tidyverse)
library(tidyverse)
library(here)
library(lme4)
library(lme4)
library(brms)
```{r constants}
EXPERIMENT_NAME <- "csop_main_final"
time_format <- "%Y-%m-%dT%H:%M:%OSZ"
FIGURE_FORMAT <- "png"
player_ids_to_exclude = c("cQhmEfqCgdPb6nLvY")
EXPERIMENT_NAME <- "csop_main_final"
time_format <- "%Y-%m-%dT%H:%M:%OSZ"
FIGURE_FORMAT <- "png"
player_ids_to_exclude = c("cQhmEfqCgdPb6nLvY")
```{r read_preprocess}
df.player_rounds <- read.csv(here(sprintf("data/experimental_data/%s/player-rounds.csv",
EXPERIMENT_NAME)))
df.processed <- read.csv(here(sprintf("data/processed_data/%s/processed.csv",
EXPERIMENT_NAME)))
df.messages <- read.csv(here(sprintf("data/experimental_data/%s/messages.csv",
EXPERIMENT_NAME)))
df.merged <- df.processed |>
left_join(df.player_rounds |> select(playerId, gameId) |> unique(), on="gameId") |>
left_join(df.messages, by=c("task_index", "chainPosition", "chainIdx")) |>
mutate(
round_duration_minutes = round_duration / 60,
normalized_score = score / optimal_solution,
efficiency = normalized_score / round_duration_minutes,
task_index = as.character(task_index)
) |>
filter((complexity != "practice") & (chainPosition <= 2) & (normalized_score != 0) & !(playerId %in% player_ids_to_exclude))
df.complete_solution <- df.merged |>
filter(chainPosition == 0 | containsCompleteSolution == 1)
df.complete_solution <- df.merged |>
filter(chainPosition == 0 | containsCompleteSolution == 1)
# Message Type Analysis
```{r message_type_hist}
df.merged |>
filter(messageType != "" & !(is.na(messageType))) |>
mutate(messageType = factor(messageType, levels=c("full", "partial", "strategy", "other"))) |>
ggplot(
mapping = aes(x = messageType)
) +
geom_histogram(stat="count", color="black", fill="dodgerblue") +
labs(
title = "Frequency of Message Types",
x = "Type"
) +
theme_minimal()
View(df.processed)
df.saw_message <- df.merged |>
filter(chainPosition != 0)
model <- brm(prev_last_solution_dist ~ 1 + containsCompleteSolution + (1 | playerId) + (1 | task_index), data = df.saw_message)
summary(model)
df.merged |>
filter(chainPosition > 0) |>
ggplot(
mapping = aes(x = containsCompleteSolution, y = prev_last_solution_dist, color = task_index, group = 1)
) +
geom_point(alpha=0.6, position = position_jitter(width=0.1, height=0)) +
stat_summary(fun.data=mean_se, geom="pointrange", size=0.5) +
scale_x_continuous(breaks=c(1, 2)) +
labs(
x = "Message Contains Full Solution",
y = "Last Solution Distance",
color = "Difficulty",
title = "Solution Distance by Message Type"
) +
theme_minimal()
ggsave(here(sprintf("figures/%s_last_solution_concordance_by_message_type.%s", EXPERIMENT_NAME,
FIGURE_FORMAT)),
bg="white")
df.merged |>
filter(chainPosition > 0) |>
ggplot(
mapping = aes(x = containsCompleteSolution, y = prev_last_solution_dist, color = task_index, group = 1)
) +
geom_point(alpha=0.6, position = position_jitter(width=0.1, height=0)) +
stat_summary(fun.data=mean_se, geom="pointrange", size=0.5) +
scale_x_continuous(breaks=c(1, 2)) +
labs(
x = "Message Contains Full Solution",
y = "Last Solution Distance",
color = "Difficulty",
title = "Solution Distance by Message Type"
) +
theme_minimal()
ggsave(here(sprintf("figures/%s_last_solution_concordance_by_message_type.%s", EXPERIMENT_NAME,
FIGURE_FORMAT)),
bg="white")
df.merged |>
filter(chainPosition > 0) |>
ggplot(
mapping = aes(x = containsCompleteSolution, y = prev_last_solution_dist, color = task_index, group = 1)
) +
geom_point(alpha=0.6, position = position_jitter(width=0.1, height=0)) +
stat_summary(fun.data=mean_se, geom="pointrange", size=0.5) +
scale_x_continuous(breaks=c(1, 2)) +
labs(
x = "Message Contains Full Solution",
y = "Last Solution Distance",
color = "Difficulty",
title = "Solution Distance by Message Type"
) +
theme_minimal()
df.merged |>
filter(chainPosition > 0) |>
ggplot(
mapping = aes(x = chainPosition, y = prev_last_solution_dist, color = task_index, group = 1)
) +
geom_point(alpha=0.6, position = position_jitter(width=0.1, height=0)) +
stat_summary(fun.data=mean_se, geom="pointrange", size=0.5) +
scale_x_continuous(breaks=c(1, 2)) +
labs(
x = "Chain Position",
y = "Last Solution Distance",
color = "Difficulty",
title = "Solution Distance by Message Type"
) +
theme_minimal()
df.merged |>
filter(chainPosition > 0) |>
ggplot(
mapping = aes(x = chainPosition, y = prev_last_solution_dist, color = task_index, group = 1)
) +
geom_point(alpha=0.6, position = position_jitter(width=0.1, height=0)) +
stat_summary(fun.data=mean_se, geom="pointrange", size=0.5) +
scale_x_continuous(breaks=c(1, 2)) +
labs(
x = "Chain Position",
y = "Last Solution Distance",
color = "Difficulty",
title = "Last Solution Distance by Chain Position"
) +
theme_minimal()
ggsave(here(sprintf("figures/%s_last_solution_concordance_by_chain_position.%s", EXPERIMENT_NAME,
FIGURE_FORMAT)),
bg="white")
df.saw_message <- df.merged |>
filter(chainPosition != 0)
model <- brm(prev_last_solution_dist ~ 1 + chainPosition + (1 | playerId) + (1 | task_index), data = df.saw_message)
summary(model)
